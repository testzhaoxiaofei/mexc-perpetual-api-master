package main

import (
	"log/slog"

	mexcperpetualapi "gitlab.lnamphp.com/tsingroo/mexc-perpetual-api"
	"gitlab.lnamphp.com/tsingroo/mexc-perpetual-api/utils"
)

func main() {
	zuokong()
}

func aesDecrypt() {
	cipherText := ""
	aesKey := "7ce9ac1e554803e74d6835cdd7c7009c"

	decodedBytes, err := utils.Base64ToBytes(cipherText)
	if err != nil {
		panic(err)
	}
	decryptedBytes, err := utils.Aes256GCMDecrypt(decodedBytes, []byte(aesKey))
	if err != nil {
		panic(err)
	}
	slog.Info("decryptedBytes", "decryptedBytes", string(decryptedBytes))
}

func aesEncrypt() {
	plainText := "{\"scene\":28,\"parameters\":[\"hostname\",\"member_id\",\"mhash\",\"mtoken\",\"platform_type\",\"product_type\",\"sys\",\"sys_ver\"],\"chash\":\"d6c64d28e362f314071b3f9d78ff7494d9cd7177ae0465e772d1840e9f7905d8\",\"overdue\":86400,\"data_upload\":1}"
	aesKey := "1b8c71b668084dda9dc0285171ccf753"
	encryptedBytes, err := utils.Aes256GCMEncrypt([]byte(plainText), []byte(aesKey))
	if err != nil {
		panic(err)
	}

	base64String := utils.BytesToBase64(encryptedBytes)
	slog.Info("base64String", "base64String", base64String)
}

func rsaEncrypt() {
	pubKey := `-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvQMGy41My9NFwQQdwhOs
szZJnNdOVMmZrKxtT+Xc49Q6Q26y5tRpdeI+KvcfKfrYE1dwxRL0XzOimTZQYNGX
lg66IeTe+9BGivgLvzzhJ04THx4qagRaOpdKDV6YdfHWNNvgK0iHLz6UStPl1LEZ
794aKK8X8FK8oA+EXZGklnhMTnTdu1KzP6qTStwutnKndgLvCEG3I88RjnPBAncH
elsglDpo18L2Zy/+tgfE3fPj1njJTA02/ivcpJmGVe1xMaSjOBBC7YsfpNUVtK58
ey+IGYwBKF3WJ3OiwkhqPOZPmTYGn2KjYQORv55OLfmssh8vpcVNxn7/DYPflBMC
WwIDAQAB
-----END PUBLIC KEY-----
`
	plainText := "7ce9ac1e554803e74d6835cdd7c7009c"
	encryptedBytes, err := utils.RSAEncrypt(pubKey, plainText)
	if err != nil {
		panic(err)
	}
	base64String := utils.BytesToBase64(encryptedBytes)
	slog.Info("base64String", "base64String", base64String)
}

func rsaDecrypt() {
	privKey := `-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC9AwbLjUzL00XB
BB3CE6yzNkmc105UyZmsrG1P5dzj1DpDbrLm1Gl14j4q9x8p+tgTV3DFEvRfM6KZ
NlBg0ZeWDroh5N770EaK+Au/POEnThMfHipqBFo6l0oNXph18dY02+ArSIcvPpRK
0+XUsRnv3hoorxfwUrygD4RdkaSWeExOdN27UrM/qpNK3C62cqd2Au8IQbcjzxGO
c8ECdwd6WyCUOmjXwvZnL/62B8Td8+PWeMlMDTb+K9ykmYZV7XExpKM4EELtix+k
1RW0rnx7L4gZjAEoXdYnc6LCSGo85k+ZNgafYqNhA5G/nk4t+ayyHy+lxU3Gfv8N
g9+UEwJbAgMBAAECggEAPs2SpG/+5Hr+4nOLr8D50VJog0THMkUKWuWwLKwkCU+r
TFyr9Sb/I7xZC82w/THsOgED53e02y09CcuSSZla1PFvx3NU5DcAOYzR2mlQJs86
a0yKq09m67D5WhfkcMw6cLXedoNS58/TVkmyREnUZG9YIcyMF75mDokZYj3SgmxD
wWQyL2YJp3/iyYP454MxZuAEMC+KTra0JiZbFIdcnLN+ePxuULDoJ+CNyp0L03IW
7lRa5tWEHQG+XIc0BNynuB47Ms+v+D/1UNr0Rv966OHWz+oZDRU214ZMwF8/3ncL
t9WZ+FzOlzIHuzB7o1Jxggcc454oa5G29KfQgSXBgQKBgQDu1Hdrq0aPkp1xEsQ5
XiUd4lEI3xCvOi97ZvUNoG3OouSI1OPyGLVcPNrpsUXsU5dOSYfb8pGhGeY4xtZK
1+NKsxZc9Evsqox0JIxMQfYXjNf/ci0nQS5xppboOZ7pk5xFE3vzFJ8jQHyHXlQw
lw2IrajE7Ttg9PdDG85bUdkflQKBgQDKma9X3/xrvv8X84v8W4vhfOsjemfU9XYr
6p245d0Bfk3VG8DXRh2srwbEYbzhL+lYylDvqcuWDNUGQuS1DJv3OdSVcPhoOcdl
5UoLEi6vUbIDFZWri/p9vyfqy9wZC/V3QW6g06pm4ADAfZh4xZfRA5vcZLSrbzl0
xMSxG8feLwKBgQDmM1K8LAXCI16v+5e5d/4stNTIyUFqtJnJxy5SqRzOPIItRY5E
7v34XwvejqlIJjZEFmnmXgNyleUrOrSYxUhm2wGmLS71eloRJJ06b6XFg1M6/BF7
sb8TerAgPFHo8AeDKUmivnC5aNHfJNPfVemMoV54GfXO+a9PNwELUnQGlQKBgB+D
fES88HSKBv/gwDuGueFfHuwr1A7KB5GZMuNZzeC3lr+5S2uw2ljL+M9/LHQSkcdf
4OsGjEZQxKnuqciHp5LzCeAc7Ga55gwxeCz0rRJUMM5OAzPl2BbLLxhUkW3L8GiW
YvDdO7o4yaUnZBoVEiJO32WOvJOV/2fsW3P5EEO9AoGAd6kfZUWjV4UkkKi1kZxo
fmbdxewM++ArE0EG/GXm24/XUXUlah+sdgSbq+YkkvyprsWmhJDonI2Z1XcFpoJ9
Hs87ewfu0FCK7lWdhjDZSDogWcwqDMXIQBvJ8p48roVZDUaCsd044ecvTBq7F/QG
8iZ7m+fS8t2OSquXlqpZCfw=
-----END PRIVATE KEY-----
`
	cipherText := "UUeZwJ+ItcIh00UJJjUz76jJIAJ4B41cCddAyV2F83cPV9iDv3TAlgeLkn4pRQrRqJk+mdbK2vln9zouE2apgpeQZNUP+MpPuIJs6m0iu3+3UiWw1bVDEBIYhcGl8L5TlvliqmqdfN/nnDUWSfoDax6dUchgt61Mq58Z3+mzpadRd66w5w0g3ZXhUcRcv5mEAeJ/L9/pcqVYeG8FbidRg/n8xZADbT+8aGL0WOz7E0SfbMCRXto7lG86LLWi7W6uTXja685O4MATYC3L1FyL3OFqMVODaF/eqkur33zqWnEPboi9twBF5jZn2ygwvpmRLO2h2DF/w5tPF3vxwzoCNw=="
	decodedBase64Bytes, err := utils.Base64ToBytes(cipherText)
	if err != nil {
		panic(err)
	}
	decryptedString, err := utils.RSADecrypt(privKey, decodedBase64Bytes)
	if err != nil {
		panic(err)
	}
	slog.Info("rsaDecrypt", slog.String("decryptedString", decryptedString))
}

func zuokong() {
	COOKID_UID := "WEB8b8a6a5f47fd8b29c835d761b37f03708fea0956670cd7242ffeab58b25b1df8"
	PROXY := "http://localhost:7890"
	mpc, err := mexcperpetualapi.NewMexcPerpetualClient(COOKID_UID, PROXY)
	if err != nil {
		panic(err)
	}
	// 最终到交易所成交的时候vol会有一个倍数放大或缩小，放大或缩小倍数需要从官方Api查询合约信息获取
	orderId, err := mpc.OpenKong("FUEL_USDT", 2, 10)
	if err != nil {
		panic(err)
	}
	slog.Info("OpenKong return", "orderId", orderId)
}

func zuoduo() {
	COOKID_UID := "WEB8b8a6a5f47fd8b29c835d761b37f03708fea0956670cd7242ffeab58b25b1df8"
	PROXY := "http://localhost:7890"
	mpc, err := mexcperpetualapi.NewMexcPerpetualClient(COOKID_UID, PROXY)
	if err != nil {
		panic(err)
	}
	// 最终到交易所成交的时候vol会有一个倍数放大或缩小，放大或缩小倍数需要从官方Api查询合约信息获取
	orderId, err := mpc.OpenDuo("FUEL_USDT", 2, 10)
	if err != nil {
		panic(err)
	}
	slog.Info("OpenDuo return", "orderId", orderId)
}
